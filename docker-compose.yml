services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_APP_PASSWORD: secret
      POSTGRES_KEYCLOAK_PASSWORD: keycloak
      POSTGRES_TERRAFORM_PASSWORD: terraform
    ports:
      - "5432:5432"
    volumes:
      - type: bind
        source: postgres/db-init.sh
        target: /docker-entrypoint-initdb.d/db-init.sh
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "app"]
      interval: 5s
      timeout: 3s
      retries: 3
  db-init:
    image: akring1729/fe-be-db-template-alembic:dev
    build:
      dockerfile: backend/alembic/Dockerfile
      context: .
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: app
      DB_USER: app
      DB_PASSWORD: secret
    depends_on:
      db:
        condition: service_healthy
  keycloak:
    # TODO: add Keycloak DB
    image: quay.io/keycloak/keycloak:25.0.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak`)"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_HTTP_RELATIVE_PATH: "/auth"
    command: start-dev
    ports:
      - "8090:8080"
      - "9000:9000"
  wait-for-keycloak:
    image: curlimages/curl:latest
    entrypoint:
      - /bin/sh
      - -c
      - |
        while true; do
          if curl --head -fsS "http://keycloak:9000/auth/health/ready"
          then
            break
          fi
          echo "Waiting for Keycloak to be ready"
          sleep 1
        done
        echo "Keycloak ready"
  keycloak-init:
    image: akring1729/fe-be-db-template-keycloak-init:dev
    build:
      dockerfile: keycloak/Dockerfile.init
      context: .
    environment:
      PGUSER: terraform
      PGPASSWORD: terraform
      PGSSLMODE: disable
      TF_VAR_keycloak_password: admin
      TF_VAR_create_user: true
      # TODO: generate secret default in Dockerfile
      TF_VAR_user_password: bruce
    depends_on:
      wait-for-keycloak:
        condition: service_completed_successfully
  nginx:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend`)"
    volumes:
      - type: bind
        source: bootstrap
        target: /usr/share/nginx/html
    ports:
      - "8081:80"
  traefik:
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8180:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
volumes:
  postgres:
